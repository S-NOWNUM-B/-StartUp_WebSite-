import React, { useState } from 'react';

function DocumentsPage() {
  const [activeTab, setActiveTab] = useState('available'); // available, orders, history
  const [selectedCategory, setSelectedCategory] = useState('all');

  const availableDocuments = [
    {
      id: 1,
      name: '–°–ø—Ä–∞–≤–∫–∞ –æ–± –æ–±—É—á–µ–Ω–∏–∏',
      description: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞ –æ —Ç–æ–º, —á—Ç–æ –≤—ã —è–≤–ª—è–µ—Ç–µ—Å—å —Å—Ç—É–¥–µ–Ω—Ç–æ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞',
      category: '–°–ø—Ä–∞–≤–∫–∏',
      processingTime: '1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è',
      cost: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      format: 'PDF',
      languages: ['–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'],
      requirements: ['–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –±–∏–ª–µ—Ç', '–ó–∞—è–≤–ª–µ–Ω–∏–µ'],
      icon: 'üìÑ'
    },
    {
      id: 2,
      name: '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ (Transcript)',
      description: '–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –∏–∑—É—á–µ–Ω–Ω—ã—Ö –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞—Ö –∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö',
      category: '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã',
      processingTime: '3-5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π',
      cost: '5000 —Ç–µ–Ω–≥–µ',
      format: 'PDF + –ø–µ—á–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è',
      languages: ['–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'],
      requirements: ['–ó–∞—è–≤–ª–µ–Ω–∏–µ', '–ö–æ–ø–∏—è —É–¥–æ—Å—Ç–æ–≤–µ—Ä–µ–Ω–∏—è –ª–∏—á–Ω–æ—Å—Ç–∏', '–û–ø–ª–∞—Ç–∞'],
      icon: 'üìä'
    },
    {
      id: 3,
      name: '–°–ø—Ä–∞–≤–∫–∞ –æ –ø–µ—Ä–∏–æ–¥–µ –æ–±—É—á–µ–Ω–∏—è',
      description: '–î–æ–∫—É–º–µ–Ω—Ç —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –¥–∞—Ç –Ω–∞—á–∞–ª–∞ –∏ –æ–∫–æ–Ω—á–∞–Ω–∏—è –æ–±—É—á–µ–Ω–∏—è',
      category: '–°–ø—Ä–∞–≤–∫–∏',
      processingTime: '1-2 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è',
      cost: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      format: 'PDF',
      languages: ['–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π'],
      requirements: ['–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –±–∏–ª–µ—Ç'],
      icon: 'üìÖ'
    },
    {
      id: 4,
      name: '–ö–æ–ø–∏—è –¥–∏–ø–ª–æ–º–∞',
      description: '–ó–∞–≤–µ—Ä–µ–Ω–Ω–∞—è –∫–æ–ø–∏—è –¥–∏–ø–ª–æ–º–∞ –æ –≤—ã—Å—à–µ–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–∏',
      category: '–î–∏–ø–ª–æ–º—ã –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã',
      processingTime: '5-7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π',
      cost: '8000 —Ç–µ–Ω–≥–µ',
      format: '–ü–µ—á–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è',
      languages: ['–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π'],
      requirements: ['–ó–∞—è–≤–ª–µ–Ω–∏–µ', '–û—Ä–∏–≥–∏–Ω–∞–ª –¥–∏–ø–ª–æ–º–∞', '–û–ø–ª–∞—Ç–∞'],
      icon: 'üéì'
    },
    {
      id: 5,
      name: '–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –≤–æ–µ–Ω–∫–æ–º–∞—Ç–∞',
      description: '–°–ø—Ä–∞–≤–∫–∞ –æ–± –æ—Ç—Å—Ä–æ—á–∫–µ –æ—Ç –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
      category: '–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–ø—Ä–∞–≤–∫–∏',
      processingTime: '1 —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å',
      cost: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      format: 'PDF + –ø–µ—á–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è',
      languages: ['–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π'],
      requirements: ['–ü–æ–≤–µ—Å—Ç–∫–∞ –∏–∑ –≤–æ–µ–Ω–∫–æ–º–∞—Ç–∞', '–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∏–π –±–∏–ª–µ—Ç'],
      icon: 'üõ°Ô∏è'
    },
    {
      id: 6,
      name: '–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –±–∞–Ω–∫–∞',
      description: '–°–ø—Ä–∞–≤–∫–∞ –æ –¥–æ—Ö–æ–¥–∞—Ö –∏ —Å—Ç–∞—Ç—É—Å–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–ª—è –±–∞–Ω–∫–æ–≤—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π',
      category: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —Å–ø—Ä–∞–≤–∫–∏',
      processingTime: '2-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è',
      cost: '2000 —Ç–µ–Ω–≥–µ',
      format: 'PDF + –ø–µ—á–∞—Ç–Ω–∞—è –≤–µ—Ä—Å–∏—è',
      languages: ['–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π'],
      requirements: ['–ó–∞—è–≤–ª–µ–Ω–∏–µ', '–î–æ–∫—É–º–µ–Ω—Ç –∏–∑ –±–∞–Ω–∫–∞ —Å —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º–∏'],
      icon: 'üè¶'
    }
  ];

  const documentOrders = [
    {
      id: 1,
      documentName: '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞ (Transcript)',
      orderDate: '2025-01-15',
      status: 'processing',
      estimatedDate: '2025-01-20',
      cost: '5000 —Ç–µ–Ω–≥–µ',
      paymentStatus: 'paid',
      language: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
      trackingNumber: 'DOC-2025-001',
      comments: '–¢—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—É –∑–∞ —Ä—É–±–µ–∂–æ–º'
    },
    {
      id: 2,
      documentName: '–°–ø—Ä–∞–≤–∫–∞ –æ–± –æ–±—É—á–µ–Ω–∏–∏',
      orderDate: '2025-01-10',
      status: 'ready',
      estimatedDate: '2025-01-12',
      cost: '–ë–µ—Å–ø–ª–∞—Ç–Ω–æ',
      paymentStatus: 'not_required',
      language: '–†—É—Å—Å–∫–∏–π',
      trackingNumber: 'DOC-2025-002',
      comments: '–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –≤–∏–∑—ã'
    },
    {
      id: 3,
      documentName: '–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –±–∞–Ω–∫–∞',
      orderDate: '2025-01-08',
      status: 'completed',
      estimatedDate: '2025-01-11',
      completedDate: '2025-01-11',
      cost: '2000 —Ç–µ–Ω–≥–µ',
      paymentStatus: 'paid',
      language: '–†—É—Å—Å–∫–∏–π',
      trackingNumber: 'DOC-2025-003',
      comments: '–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞'
    }
  ];

  const documentHistory = [
    {
      id: 1,
      documentName: '–°–ø—Ä–∞–≤–∫–∞ –æ–± –æ–±—É—á–µ–Ω–∏–∏',
      orderDate: '2024-11-15',
      completedDate: '2024-11-17',
      language: '–ö–∞–∑–∞—Ö—Å–∫–∏–π',
      purpose: '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∏–ø–µ–Ω–¥–∏–∏'
    },
    {
      id: 2,
      documentName: '–°–ø—Ä–∞–≤–∫–∞ –¥–ª—è –≤–æ–µ–Ω–∫–æ–º–∞—Ç–∞',
      orderDate: '2024-09-20',
      completedDate: '2024-09-21',
      language: '–†—É—Å—Å–∫–∏–π',
      purpose: '–û—Ç—Å—Ä–æ—á–∫–∞ –æ—Ç –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã'
    },
    {
      id: 3,
      documentName: '–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∞—è —Å–ø—Ä–∞–≤–∫–∞',
      orderDate: '2024-06-10',
      completedDate: '2024-06-15',
      language: '–ê–Ω–≥–ª–∏–π—Å–∫–∏–π',
      purpose: '–°—Ç–∞–∂–∏—Ä–æ–≤–∫–∞ –≤ –∑–∞—Ä—É–±–µ–∂–Ω–æ–º —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ'
    }
  ];

  const categories = [...new Set(availableDocuments.map(doc => doc.category))];

  const filteredDocuments = selectedCategory === 'all' 
    ? availableDocuments 
    : availableDocuments.filter(doc => doc.category === selectedCategory);

  const getStatusColor = (status) => {
    switch(status) {
      case 'processing': return 'warning';
      case 'ready': return 'success';
      case 'completed': return 'info';
      case 'cancelled': return 'danger';
      default: return 'secondary';
    }
  };

  const getStatusText = (status) => {
    switch(status) {
      case 'processing': return '–í –æ–±—Ä–∞–±–æ—Ç–∫–µ';
      case 'ready': return '–ì–æ—Ç–æ–≤ –∫ –≤—ã–¥–∞—á–µ';
      case 'completed': return '–í—ã–¥–∞–Ω';
      case 'cancelled': return '–û—Ç–º–µ–Ω–µ–Ω';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const getPaymentStatusText = (status) => {
    switch(status) {
      case 'paid': return '–û–ø–ª–∞—á–µ–Ω–æ';
      case 'pending': return '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã';
      case 'not_required': return '–ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è';
      default: return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    }
  };

  const handleOrderDocument = (document) => {
    alert(`–ó–∞–∫–∞–∑ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${document.name}`);
  };

  const handleDownloadDocument = (order) => {
    alert(`–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ${order.documentName}`);
  };

  return (
    <div className="container py-4">
      <div className="page-content card">
        <div className="d-flex justify-content-between align-items-center mb-4">
          <div>
            <h2 className="mb-1">–î–æ–∫—É–º–µ–Ω—Ç—ã</h2>
            <p className="lead text-muted mb-0">–ó–∞–∫–∞–∑ —Å–ø—Ä–∞–≤–æ–∫ –∏ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤</p>
          </div>
        </div>

        {/* –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±—ã */}
        <ul className="nav nav-pills mb-4">
          <li className="nav-item">
            <button 
              className={`nav-link ${activeTab === 'available' ? 'active' : ''}`}
              onClick={() => setActiveTab('available')}
            >
              <i className="bi bi-file-earmark-plus me-2"></i>
              –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
            </button>
          </li>
          <li className="nav-item">
            <button 
              className={`nav-link ${activeTab === 'orders' ? 'active' : ''}`}
              onClick={() => setActiveTab('orders')}
            >
              <i className="bi bi-hourglass-split me-2"></i>
              –ú–æ–∏ –∑–∞–∫–∞–∑—ã
              {documentOrders.filter(order => order.status !== 'completed').length > 0 && (
                <span className="badge bg-danger ms-2">
                  {documentOrders.filter(order => order.status !== 'completed').length}
                </span>
              )}
            </button>
          </li>
          <li className="nav-item">
            <button 
              className={`nav-link ${activeTab === 'history' ? 'active' : ''}`}
              onClick={() => setActiveTab('history')}
            >
              <i className="bi bi-clock-history me-2"></i>
              –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤
            </button>
          </li>
        </ul>

        {/* –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã */}
        {activeTab === 'available' && (
          <div>
            <div className="d-flex justify-content-between align-items-center mb-4">
              <h4>–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–ª—è –∑–∞–∫–∞–∑–∞ –¥–æ–∫—É–º–µ–Ω—Ç—ã</h4>
              <select 
                className="form-select w-auto" 
                value={selectedCategory} 
                onChange={(e) => setSelectedCategory(e.target.value)}
              >
                <option value="all">–í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                {categories.map(category => (
                  <option key={category} value={category}>{category}</option>
                ))}
              </select>
            </div>

            <div className="row">
              {filteredDocuments.map(document => (
                <div key={document.id} className="col-lg-6 mb-4">
                  <div className="card h-100 shadow-sm">
                    <div className="card-body">
                      <div className="d-flex align-items-start mb-3">
                        <div className="me-3" style={{ fontSize: '2.5rem' }}>
                          {document.icon}
                        </div>
                        <div className="flex-grow-1">
                          <h5 className="card-title mb-1">{document.name}</h5>
                          <span className="badge bg-secondary mb-2">{document.category}</span>
                          <p className="card-text text-muted">{document.description}</p>
                        </div>
                      </div>

                      <div className="row mb-3">
                        <div className="col-6">
                          <small className="text-muted">–°—Ä–æ–∫ –∏–∑–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—è:</small>
                          <div className="fw-bold">{document.processingTime}</div>
                        </div>
                        <div className="col-6">
                          <small className="text-muted">–°—Ç–æ–∏–º–æ—Å—Ç—å:</small>
                          <div className="fw-bold text-success">{document.cost}</div>
                        </div>
                      </div>

                      <div className="mb-3">
                        <small className="text-muted">–î–æ—Å—Ç—É–ø–Ω—ã–µ —è–∑—ã–∫–∏:</small>
                        <div className="mt-1">
                          {document.languages.map((language, index) => (
                            <span key={index} className="badge bg-light text-dark me-1">
                              {language}
                            </span>
                          ))}
                        </div>
                      </div>

                      <div className="mb-3">
                        <small className="text-muted">–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</small>
                        <ul className="list-unstyled mt-1">
                          {document.requirements.map((requirement, index) => (
                            <li key={index}>
                              <small>‚Ä¢ {requirement}</small>
                            </li>
                          ))}
                        </ul>
                      </div>

                      <div className="d-flex justify-content-between align-items-center">
                        <small className="text-muted">–§–æ—Ä–º–∞—Ç: {document.format}</small>
                        <button 
                          className="btn btn-primary"
                          onClick={() => handleOrderDocument(document)}
                        >
                          <i className="bi bi-plus-circle me-2"></i>
                          –ó–∞–∫–∞–∑–∞—Ç—å
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ú–æ–∏ –∑–∞–∫–∞–∑—ã */}
        {activeTab === 'orders' && (
          <div>
            <h4 className="mb-3">–ú–æ–∏ –∑–∞–∫–∞–∑—ã</h4>
            
            {documentOrders.length === 0 ? (
              <div className="text-center py-5">
                <i className="bi bi-file-earmark-x display-1 text-muted"></i>
                <h5 className="mt-3 text-muted">–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–∫–∞–∑–æ–≤</h5>
                <p className="text-muted">–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤–æ –≤–∫–ª–∞–¥–∫—É "–î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã" –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞</p>
              </div>
            ) : (
              <div className="table-responsive">
                <table className="table table-hover">
                  <thead className="table-dark">
                    <tr>
                      <th>–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞</th>
                      <th>–î–æ–∫—É–º–µ–Ω—Ç</th>
                      <th>–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞</th>
                      <th>–°—Ç–∞—Ç—É—Å</th>
                      <th>–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å</th>
                      <th>–°—Ç–æ–∏–º–æ—Å—Ç—å</th>
                      <th>–û–ø–ª–∞—Ç–∞</th>
                      <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                  </thead>
                  <tbody>
                    {documentOrders.map(order => (
                      <tr key={order.id}>
                        <td className="fw-bold">{order.trackingNumber}</td>
                        <td>
                          <div>{order.documentName}</div>
                          <small className="text-muted">{order.language}</small>
                        </td>
                        <td>{order.orderDate}</td>
                        <td>
                          <span className={`badge bg-${getStatusColor(order.status)}`}>
                            {getStatusText(order.status)}
                          </span>
                        </td>
                        <td>
                          {order.status === 'completed' ? order.completedDate : order.estimatedDate}
                        </td>
                        <td>{order.cost}</td>
                        <td>
                          <span className={`badge bg-${order.paymentStatus === 'paid' ? 'success' : order.paymentStatus === 'pending' ? 'warning' : 'secondary'}`}>
                            {getPaymentStatusText(order.paymentStatus)}
                          </span>
                        </td>
                        <td>
                          {order.status === 'ready' && (
                            <button 
                              className="btn btn-sm btn-success"
                              onClick={() => handleDownloadDocument(order)}
                            >
                              <i className="bi bi-download"></i>
                            </button>
                          )}
                          {order.status === 'completed' && (
                            <button 
                              className="btn btn-sm btn-outline-primary"
                              onClick={() => handleDownloadDocument(order)}
                            >
                              <i className="bi bi-eye"></i>
                            </button>
                          )}
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}

            {/* –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–æ–≤ */}
            {documentOrders.filter(order => order.status !== 'completed').length > 0 && (
              <div className="mt-4">
                <h5>–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã</h5>
                {documentOrders.filter(order => order.status !== 'completed').map(order => (
                  <div key={order.id} className="card mb-3">
                    <div className="card-body">
                      <div className="d-flex justify-content-between align-items-start">
                        <div>
                          <h6>{order.documentName}</h6>
                          <p className="text-muted mb-2">{order.comments}</p>
                          <div className="d-flex gap-3">
                            <small>
                              <strong>–ó–∞–∫–∞–∑:</strong> {order.orderDate}
                            </small>
                            <small>
                              <strong>–ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å:</strong> {order.estimatedDate}
                            </small>
                            <small>
                              <strong>–Ø–∑—ã–∫:</strong> {order.language}
                            </small>
                          </div>
                        </div>
                        <div className="text-end">
                          <span className={`badge bg-${getStatusColor(order.status)} mb-2`}>
                            {getStatusText(order.status)}
                          </span>
                          <div>
                            <small className="text-muted">{order.trackingNumber}</small>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        )}

        {/* –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ */}
        {activeTab === 'history' && (
          <div>
            <h4 className="mb-3">–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤</h4>
            
            {documentHistory.length === 0 ? (
              <div className="text-center py-5">
                <i className="bi bi-clock-history display-1 text-muted"></i>
                <h5 className="mt-3 text-muted">–ò—Å—Ç–æ—Ä–∏—è –ø—É—Å—Ç–∞</h5>
                <p className="text-muted">–ó–¥–µ—Å—å –±—É–¥—É—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤–∞—à–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞–∫–∞–∑—ã</p>
              </div>
            ) : (
              <div className="table-responsive">
                <table className="table table-hover">
                  <thead className="table-dark">
                    <tr>
                      <th>–î–æ–∫—É–º–µ–Ω—Ç</th>
                      <th>–î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞</th>
                      <th>–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏</th>
                      <th>–Ø–∑—ã–∫</th>
                      <th>–¶–µ–ª—å –ø–æ–ª—É—á–µ–Ω–∏—è</th>
                      <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                    </tr>
                  </thead>
                  <tbody>
                    {documentHistory.map(record => (
                      <tr key={record.id}>
                        <td className="fw-semibold">{record.documentName}</td>
                        <td>{record.orderDate}</td>
                        <td>{record.completedDate}</td>
                        <td>{record.language}</td>
                        <td>
                          <small className="text-muted">{record.purpose}</small>
                        </td>
                        <td>
                          <button className="btn btn-sm btn-outline-primary">
                            <i className="bi bi-arrow-clockwise me-1"></i>
                            –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–∫–∞–∑
                          </button>
                        </td>
                      </tr>
                    ))}
                  </tbody>
                </table>
              </div>
            )}
          </div>
        )}
      </div>
    </div>
  );
}

export default DocumentsPage; 