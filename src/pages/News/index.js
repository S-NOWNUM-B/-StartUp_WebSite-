import React, { useState } from 'react';
import './styles.css';

function NewsPage() {
  const [searchTerm, setSearchTerm] = useState('');
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [selectedNews, setSelectedNews] = useState(null);
  const [showCreateModal, setShowCreateModal] = useState(false);
  const [sortBy, setSortBy] = useState('date'); // date, views, title
  const [viewMode, setViewMode] = useState('grid'); // grid, list

  const [newsData, setNewsData] = useState([
    { 
      id: 1, 
      title: '–í–∞–∂–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–π —Å–µ—Å—Å–∏–∏', 
      summary: '–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–π —Å–µ—Å—Å–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤.',
      content: '–£–≤–∞–∂–∞–µ–º—ã–µ —Å—Ç—É–¥–µ–Ω—Ç—ã! –ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –ø—Ä–µ–¥—Å—Ç–æ—è—â–µ–π –∑–∏–º–Ω–µ–π —ç–∫–∑–∞–º–µ–Ω–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —ç–∫–∑–∞–º–µ–Ω–æ–≤ –∏ –∑–∞—á–µ—Ç–æ–≤ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ. –°–µ—Å—Å–∏—è –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è 15 —Ñ–µ–≤—Ä–∞–ª—è 2025 –≥–æ–¥–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –Ω–µ—Ç –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏—Ö –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–µ–π.',
      date: '2025-01-22',
      time: '14:30',
      category: 'academic',
      author: '–î–µ–∫–∞–Ω–∞—Ç',
      views: 342,
      likes: 28,
      comments: 5,
      image: 'üìö',
      tags: ['—Å–µ—Å—Å–∏—è', '—ç–∫–∑–∞–º–µ–Ω—ã', '—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'],
      priority: 'high',
      pinned: true
    },
    { 
      id: 2, 
      title: '–û—Ç–∫—Ä—ã—Ç –Ω–∞–±–æ—Ä –Ω–∞ –Ω–æ–≤—ã–π –∫—É—Ä—Å –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é', 
      summary: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–π –∫—É—Ä—Å –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞.',
      content: '–ö–∞—Ñ–µ–¥—Ä–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –æ–±—ä—è–≤–ª—è–µ—Ç –æ –Ω–∞—á–∞–ª–µ –Ω–∞–±–æ—Ä–∞ –Ω–∞ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫—É—Ä—Å –ø–æ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é –∏ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–º—É –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É. –ö—É—Ä—Å —Ä–∞—Å—Å—á–∏—Ç–∞–Ω –Ω–∞ 3 –º–µ—Å—è—Ü–∞, –≤–∫–ª—é—á–∞–µ—Ç –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–µ–∫—Ç—ã —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏. –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞ –¥–æ 31 —è–Ω–≤–∞—Ä—è 2025 –≥–æ–¥–∞.',
      date: '2025-01-20',
      time: '10:15',
      category: 'educational',
      author: '–ö–∞—Ñ–µ–¥—Ä–∞ –ò–¢',
      views: 156,
      likes: 42,
      comments: 12,
      image: 'ü§ñ',
      tags: ['–º–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ', '–ò–¢', '–∫—É—Ä—Å—ã'],
      priority: 'medium',
      pinned: false
    },
    { 
      id: 3, 
      title: '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞', 
      summary: '–ü–ª–∞–Ω–æ–≤—ã–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã –≤ –≤—ã—Ö–æ–¥–Ω—ã–µ –¥–Ω–∏.',
      content: '–í –±–ª–∏–∂–∞–π—à–∏–µ –≤—ã—Ö–æ–¥–Ω—ã–µ (25-26 —è–Ω–≤–∞—Ä—è) –±—É–¥–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç—å—Å—è –ø–ª–∞–Ω–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –í–æ–∑–º–æ–∂–Ω—ã –∫—Ä–∞—Ç–∫–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–±–æ–∏ –≤ —Ä–∞–±–æ—Ç–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤. –ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.',
      date: '2025-01-18',
      time: '16:45',
      category: 'technical',
      author: 'IT-–æ—Ç–¥–µ–ª',
      views: 89,
      likes: 8,
      comments: 3,
      image: '‚öôÔ∏è',
      tags: ['—Ç–µ—Ö—Ä–∞–±–æ—Ç—ã', '—Å–∏—Å—Ç–µ–º–∞', '–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'],
      priority: 'low',
      pinned: false
    },
    {
      id: 4,
      title: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è 2025',
      summary: '–ü—Ä–∏–≥–ª–∞—à–∞–µ–º –∫ —É—á–∞—Å—Ç–∏—é –≤ –ø—Ä–µ—Å—Ç–∏–∂–Ω–æ–º –Ω–∞—É—á–Ω–æ–º –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–∏.',
      content: '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ø—Ä–æ–≤–æ–¥–∏—Ç –µ–∂–µ–≥–æ–¥–Ω—É—é –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—É—é —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫—É—é –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é "–ù–∞—É–∫–∞ –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–∏ 2025". –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å–æ—Å—Ç–æ–∏—Ç—Å—è 15-16 –º–∞—Ä—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–º –∫–æ—Ä–ø—É—Å–µ. –ü—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∑–∞—è–≤–∫–∏ –Ω–∞ –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º: –ò–¢, —ç–∫–æ–Ω–æ–º–∏–∫–∞, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –Ω–∞—É–∫–∏. –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ –ø–æ–ª—É—á–∞—Ç —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å—Ç–∞–∂–∏—Ä–æ–≤–∫–∏.',
      date: '2025-01-16',
      time: '12:00',
      category: 'events',
      author: '–ù–∞—É—á–Ω—ã–π –æ—Ç–¥–µ–ª',
      views: 234,
      likes: 67,
      comments: 18,
      image: 'üèÜ',
      tags: ['–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è', '–Ω–∞—É–∫–∞', '–º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–µ'],
      priority: 'high',
      pinned: true
    },
    {
      id: 5,
      title: '–ù–æ–≤—ã–µ —Å—Ç–∏–ø–µ–Ω–¥–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã',
      summary: '–†–∞—Å—à–∏—Ä–µ–Ω —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç–∏–ø–µ–Ω–¥–∏–π –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.',
      content: '–†–∞–¥—ã —Å–æ–æ–±—â–∏—Ç—å –æ –∑–∞–ø—É—Å–∫–µ –Ω–æ–≤—ã—Ö —Å—Ç–∏–ø–µ–Ω–¥–∏–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤. –î–æ–±–∞–≤–ª–µ–Ω—ã —Å—Ç–∏–ø–µ–Ω–¥–∏–∏ –∑–∞ –∞–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–µ —É—Å–ø–µ—Ö–∏, –Ω–∞—É—á–Ω—É—é –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏ —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å. –ü–æ–¥–∞—á–∞ –∑–∞—è–≤–æ–∫ —á–µ—Ä–µ–∑ –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –¥–æ 10 —Ñ–µ–≤—Ä–∞–ª—è.',
      date: '2025-01-15',
      time: '09:30',
      category: 'financial',
      author: '–°—Ç–∏–ø–µ–Ω–¥–∏–∞–ª—å–Ω—ã–π –æ—Ç–¥–µ–ª',
      views: 445,
      likes: 89,
      comments: 24,
      image: 'üí∞',
      tags: ['—Å—Ç–∏–ø–µ–Ω–¥–∏–∏', '—Ñ–∏–Ω–∞–Ω—Å—ã', '–ø–æ–¥–¥–µ—Ä–∂–∫–∞'],
      priority: 'medium',
      pinned: false
    }
  ]);

  const categories = {
    all: '–í—Å–µ –Ω–æ–≤–æ—Å—Ç–∏',
    academic: '–£—á–µ–±–Ω—ã–µ',
    educational: '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ',
    technical: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ',
    events: '–°–æ–±—ã—Ç–∏—è',
    financial: '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ'
  };

  const getCategoryColor = (category) => {
    const colors = {
      academic: 'primary',
      educational: 'success', 
      technical: 'warning',
      events: 'info',
      financial: 'purple'
    };
    return colors[category] || 'secondary';
  };

  const getPriorityColor = (priority) => {
    const colors = {
      high: 'danger',
      medium: 'warning', 
      low: 'success'
    };
    return colors[priority] || 'secondary';
  };

  const filteredNews = newsData
    .filter(news => {
      const matchesSearch = news.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           news.content.toLowerCase().includes(searchTerm.toLowerCase()) ||
                           news.tags.some(tag => tag.toLowerCase().includes(searchTerm.toLowerCase()));
      const matchesCategory = selectedCategory === 'all' || news.category === selectedCategory;
      return matchesSearch && matchesCategory;
    })
    .sort((a, b) => {
      switch(sortBy) {
        case 'views': return b.views - a.views;
        case 'title': return a.title.localeCompare(b.title);
        case 'date': 
        default: 
          return new Date(b.date) - new Date(a.date);
      }
    });

  const handleLike = (newsId) => {
    setNewsData(prev => prev.map(news => 
      news.id === newsId 
        ? { ...news, likes: news.likes + 1 }
        : news
    ));
  };

  const handleShare = (news) => {
    if (navigator.share) {
      navigator.share({
        title: news.title,
        text: news.summary,
        url: window.location.href
      });
    } else {
      navigator.clipboard.writeText(`${news.title}\n${window.location.href}`);
      showToast('–°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞', 'success');
    }
  };

  const showToast = (message, type = 'info') => {
    const toast = document.createElement('div');
    toast.className = `alert alert-${type} position-fixed`;
    toast.style.cssText = 'top: 20px; right: 20px; z-index: 9999; min-width: 300px; animation: slideIn 0.3s ease;';
    toast.innerHTML = `
      <div class="d-flex align-items-center">
        <i class="bi bi-check-circle me-2"></i>
        ${message}
        <button type="button" class="btn-close ms-auto" onclick="this.parentElement.parentElement.remove()"></button>
      </div>
    `;
    document.body.appendChild(toast);
    setTimeout(() => toast.remove(), 3000);
  };

  const formatDate = (dateStr) => {
    const date = new Date(dateStr);
    return date.toLocaleDateString('ru-RU', { 
      day: 'numeric', 
      month: 'long', 
      year: 'numeric' 
    });
  };

  const getTimeAgo = (dateStr) => {
    const now = new Date();
    const date = new Date(dateStr);
    const diffTime = Math.abs(now - date);
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
    
    if (diffDays === 1) return '–≤—á–µ—Ä–∞';
    if (diffDays < 7) return `${diffDays} –¥–Ω. –Ω–∞–∑–∞–¥`;
    if (diffDays < 30) return `${Math.ceil(diffDays / 7)} –Ω–µ–¥. –Ω–∞–∑–∞–¥`;
    return formatDate(dateStr);
  };

  return (
    <div className="page-container">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
      <div className="page-header">
        <div className="d-flex justify-content-between align-items-center">
          <div>
            <h1 className="page-title">
              <i className="bi bi-newspaper"></i>
              –ù–æ–≤–æ—Å—Ç–∏ –∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
            </h1>
            <p className="page-subtitle">–ê–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ –≤–∞–∂–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è</p>
          </div>
        </div>
      </div>

      {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="page-section">
        <div className="section-header">
          <h3 className="section-title">
            <i className="bi bi-graph-up"></i>
            –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–æ–≤–æ—Å—Ç–µ–π
          </h3>
        </div>

        <div className="stats-grid">
          <div className="stat-item">
            <div className="stat-value">{newsData.length}</div>
            <div className="stat-label">–í—Å–µ–≥–æ –Ω–æ–≤–æ—Å—Ç–µ–π</div>
          </div>
          <div className="stat-item">
            <div className="stat-value">{newsData.filter(n => n.priority === 'high').length}</div>
            <div className="stat-label">–í–∞–∂–Ω—ã–µ</div>
          </div>
          <div className="stat-item">
            <div className="stat-value">{newsData.filter(n => n.pinned).length}</div>
            <div className="stat-label">–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–µ</div>
          </div>
          <div className="stat-item">
            <div className="stat-value">
              {Math.round(newsData.reduce((sum, n) => sum + n.views, 0) / newsData.length)}
            </div>
            <div className="stat-label">–°—Ä–µ–¥–Ω–∏–µ –ø—Ä–æ—Å–º–æ—Ç—Ä—ã</div>
          </div>
        </div>
      </div>

      {/* –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã */}
      <div className="page-section">
        <div className="section-header">
          <h3 className="section-title">
            <i className="bi bi-funnel"></i>
            –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä—ã
          </h3>
        </div>
        <div className="row g-3">
          <div className="col-md-4">
            <div className="input-group">
              <span className="input-group-text">
                <i className="bi bi-search"></i>
              </span>
              <input
                type="text"
                className="form-control"
                placeholder="–ü–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π..."
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
              />
            </div>
          </div>
          <div className="col-md-3">
            <select 
              className="form-select"
              value={selectedCategory}
              onChange={(e) => setSelectedCategory(e.target.value)}
            >
              {Object.entries(categories).map(([key, value]) => (
                <option key={key} value={key}>{value}</option>
              ))}
            </select>
          </div>
          <div className="col-md-3">
            <select 
              className="form-select"
              value={sortBy}
              onChange={(e) => setSortBy(e.target.value)}
            >
              <option value="date">–ü–æ –¥–∞—Ç–µ</option>
              <option value="views">–ü–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞–º</option>
              <option value="title">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
            </select>
          </div>
          <div className="col-md-2">
            <div className="btn-group w-100">
              <button 
                className={`btn ${viewMode === 'grid' ? 'btn-primary' : 'btn-outline-primary'}`}
                onClick={() => setViewMode('grid')}
              >
                <i className="bi bi-grid"></i>
              </button>
              <button 
                className={`btn ${viewMode === 'list' ? 'btn-primary' : 'btn-outline-primary'}`}
                onClick={() => setViewMode('list')}
              >
                <i className="bi bi-list"></i>
              </button>
            </div>
          </div>
        </div>
      </div>

      {/* –ù–æ–≤–æ—Å—Ç–∏ */}
      <div className="page-section">
        {viewMode === 'grid' ? (
          <div className="row">
            {filteredNews.map(news => (
              <div key={news.id} className="col-lg-6 mb-4">
                <div className={`content-card h-100 ${news.pinned ? 'border-warning' : ''}`}>
                  {news.pinned && (
                    <div className="alert alert-warning mb-0 rounded-top rounded-0">
                      <i className="bi bi-pin-angle-fill me-2"></i>
                      <strong>–ó–∞–∫—Ä–µ–ø–ª–µ–Ω–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å</strong>
                    </div>
                  )}
                  <div className="card-header d-flex justify-content-between align-items-center">
                    <div className="d-flex align-items-center gap-2">
                      <span style={{ fontSize: '1.5rem' }}>{news.image}</span>
                      <div>
                        <span className={`badge bg-${getCategoryColor(news.category)} me-2`}>
                          {categories[news.category]}
                        </span>
                        <span className={`badge bg-${getPriorityColor(news.priority)}`}>
                          {news.priority === 'high' ? '–í–∞–∂–Ω–æ' : news.priority === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π' : '–û–±—ã—á–Ω—ã–π'}
                        </span>
                      </div>
                    </div>
                    <small className="text-muted">{getTimeAgo(news.date)}</small>
                  </div>
                  <div className="card-body d-flex flex-column">
                    <h5 className="card-title">{news.title}</h5>
                    <p className="card-text">{news.summary}</p>
                    
                    <div className="mt-auto">
                      <div className="d-flex flex-wrap gap-1 mb-3">
                        {news.tags.map(tag => (
                          <span key={tag} className="badge bg-light text-dark">#{tag}</span>
                        ))}
                      </div>
                      
                      <div className="d-flex justify-content-between align-items-center">
                        <div className="d-flex gap-3 small text-muted">
                          <span><i className="bi bi-eye me-1"></i>{news.views}</span>
                          <span><i className="bi bi-heart me-1"></i>{news.likes}</span>
                          <span><i className="bi bi-chat me-1"></i>{news.comments}</span>
                        </div>
                        <div className="d-flex gap-2">
                          <button 
                            className="btn btn-outline-primary btn-sm"
                            onClick={() => setSelectedNews(news)}
                          >
                            –ß–∏—Ç–∞—Ç—å
                          </button>
                          <button 
                            className="btn btn-outline-success btn-sm"
                            onClick={() => handleLike(news.id)}
                          >
                            <i className="bi bi-heart"></i>
                          </button>
                          <button 
                            className="btn btn-outline-info btn-sm"
                            onClick={() => handleShare(news)}
                          >
                            <i className="bi bi-share"></i>
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        ) : (
          <div className="list-group">
            {filteredNews.map(news => (
              <div key={news.id} className={`list-group-item ${news.pinned ? 'border-warning' : ''}`}>
                <div className="d-flex justify-content-between align-items-start">
                  <div className="flex-grow-1">
                    <div className="d-flex align-items-center gap-2 mb-2">
                      <span style={{ fontSize: '1.2rem' }}>{news.image}</span>
                      <h6 className="mb-0">{news.title}</h6>
                      <span className={`badge bg-${getCategoryColor(news.category)}`}>
                        {categories[news.category]}
                      </span>
                      {news.pinned && <i className="bi bi-pin-angle-fill text-warning"></i>}
                    </div>
                    <p className="mb-2 text-muted">{news.summary}</p>
                    <div className="d-flex gap-1 mb-2">
                      {news.tags.map(tag => (
                        <span key={tag} className="badge bg-light text-dark small">#{tag}</span>
                      ))}
                    </div>
                    <div className="d-flex gap-3 small text-muted">
                      <span><i className="bi bi-eye me-1"></i>{news.views}</span>
                      <span><i className="bi bi-heart me-1"></i>{news.likes}</span>
                      <span><i className="bi bi-calendar me-1"></i>{formatDate(news.date)}</span>
                      <span><i className="bi bi-person me-1"></i>{news.author}</span>
                    </div>
                  </div>
                  <div className="d-flex flex-column gap-2 ms-3">
                    <button 
                      className="btn btn-outline-primary btn-sm"
                      onClick={() => setSelectedNews(news)}
                    >
                      –ß–∏—Ç–∞—Ç—å
                    </button>
                    <button 
                      className="btn btn-outline-success btn-sm"
                      onClick={() => handleLike(news.id)}
                    >
                      <i className="bi bi-heart"></i>
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        )}

        {filteredNews.length === 0 && (
          <div className="text-center py-5">
            <i className="bi bi-newspaper display-1 text-muted"></i>
            <h5 className="mt-3 text-muted">–ù–æ–≤–æ—Å—Ç–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h5>
            <p className="text-muted">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞ –∏–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞</p>
          </div>
        )}

        {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */}
        {selectedNews && (
          <div className="modal show d-block" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>
            <div className="modal-dialog modal-lg">
              <div className="modal-content">
                <div className="modal-header">
                  <h5 className="modal-title d-flex align-items-center gap-2">
                    <span style={{ fontSize: '1.5rem' }}>{selectedNews.image}</span>
                    {selectedNews.title}
                  </h5>
                  <button 
                    type="button" 
                    className="btn-close" 
                    onClick={() => setSelectedNews(null)}
                  ></button>
                </div>
                <div className="modal-body">
                  <div className="d-flex justify-content-between align-items-center mb-3">
                    <div className="d-flex gap-2">
                      <span className={`badge bg-${getCategoryColor(selectedNews.category)}`}>
                        {categories[selectedNews.category]}
                      </span>
                      <span className={`badge bg-${getPriorityColor(selectedNews.priority)}`}>
                        {selectedNews.priority === 'high' ? '–í–∞–∂–Ω–æ' : selectedNews.priority === 'medium' ? '–°—Ä–µ–¥–Ω–∏–π' : '–û–±—ã—á–Ω—ã–π'}
                      </span>
                    </div>
                    <div className="text-muted">
                      <i className="bi bi-calendar me-1"></i>
                      {formatDate(selectedNews.date)} –≤ {selectedNews.time}
                    </div>
                  </div>
                  
                  <p className="lead">{selectedNews.summary}</p>
                  <hr />
                  <div className="text-justify">{selectedNews.content}</div>
                  
                  <hr />
                  <div className="d-flex flex-wrap gap-1 mb-3">
                    {selectedNews.tags.map(tag => (
                      <span key={tag} className="badge bg-light text-dark">#{tag}</span>
                    ))}
                  </div>
                  
                  <div className="d-flex justify-content-between align-items-center">
                    <div className="d-flex gap-3 text-muted">
                      <span><i className="bi bi-eye me-1"></i>{selectedNews.views}</span>
                      <span><i className="bi bi-heart me-1"></i>{selectedNews.likes}</span>
                      <span><i className="bi bi-chat me-1"></i>{selectedNews.comments}</span>
                    </div>
                    <div className="text-muted">
                      <i className="bi bi-person-circle me-1"></i>
                      {selectedNews.author}
                    </div>
                  </div>
                </div>
                <div className="modal-footer">
                  <button 
                    type="button" 
                    className="btn btn-secondary" 
                    onClick={() => setSelectedNews(null)}
                  >
                    –ó–∞–∫—Ä—ã—Ç—å
                  </button>
                  <button 
                    type="button" 
                    className="btn btn-success"
                    onClick={() => handleLike(selectedNews.id)}
                  >
                    <i className="bi bi-heart me-2"></i>
                    –ù—Ä–∞–≤–∏—Ç—Å—è
                  </button>
                  <button 
                    type="button" 
                    className="btn btn-primary"
                    onClick={() => handleShare(selectedNews)}
                  >
                    <i className="bi bi-share me-2"></i>
                    –ü–æ–¥–µ–ª–∏—Ç—å—Å—è
                  </button>
                </div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default NewsPage; 